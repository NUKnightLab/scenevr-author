project_name: scenevr
service_name: "{{ project_name|lower }}"
gitdeploy_version: "1.0.6"
python_version: "3.9.23"
python: /home/apps/sites/scenvr-author/.venv/bin/python
service_port: "{{ scenevr_server_port }}"
nginx_template: scenevr.conf

playbooks:
  - playbook.deploy.yml
  - playbook.secrets.yml
  - playbook.restart.yml

#type: flask
#pwd: "{{ lookup('env', 'PWD') }}"
# these will be merged with deployment-specific env into init_env
init_env_common:
  PROJECT_NAME: "{{ project_name }}"
  APPLICATION_DOMAINS: "{{ domains }}" # space-delimited

  # Flask specific
  FLASK_SECRET_KEY: "{{ vault_flask_secret_key }}"
  FLASK_SETTINGS_MODULE: "core.settings"
  DATABASE_URI: "{{ vault_database_uri }}"
  AWS_STORAGE_BUCKET_URL: "{{ vault_aws_storage_bucket_url }}"
  AWS_STORAGE_BUCKET_NAME: "{{ vault_aws_storage_bucket_name }}"
  AWS_STORAGE_KEY_PREFIX: "scenevr"
  AWS_ACCESS_KEY_ID: "{{ vault_aws_access_key_id }}"
  AWS_SECRET_ACCESS_KEY: "{{ vault_aws_secret_access_key }}"

  GOOGLE_CLIENT_ID: "{{ vault_google_client_id }}"
  GOOGLE_CLIENT_SECRET: "{{ vault_google_client_secret }}"
  FLASK_CONFIG_MODULE: "config.Config"


install_root: "/home/apps/sites"
deploy_dir: "{{ install_root }}/scenevr-author"
application_dir: "{{ deploy_dir }}/app/server"
env_file: "{{ deploy_dir }}/.env"
envrc_file: "{{ deploy_dir }}/.envrc"
virtualenv: "{{ deploy_dir }}/.venv"
project_repo: "git@github.com:NUKnightLab/scenevr-author.git"
requirements_file: "{{ deploy_dir }}/app/requirements-deploy.txt"
wsgi_application: "wsgi:application"

# Flask specific configs
#static_dir: "{{ deploy_dir }}/app/static/dist"
#static_prep: "npm install && npm run build"

#application_dir: "{{ deploy_dir }}/app/server" # application dir could be a subdirectory
#service_name: "scenevr"

#env_run_script: "direnv exec {{ deploy_dir }}"
#virtualenv: "{{ virtualenv_root }}/venv"
#static_service: "s3"
#static_dest: "s3://{{ static_bucket }}/{{ project_name }}"

#application_user: apps
#virtualenv_root: "{{ deploy_dir }}"

# nginx_template: "{{ config_dir }}/custom_nginx.j2"
#nginx_conf: "{{ deploy_dir }}/nginx/conf.d/{{ project_name }}.conf"

# environment keys must match deployment branch names. Value is the name
# of the branch to be merged into this environment during deployment.
#supported_envs:
#  stg: master
#  prd: stg
